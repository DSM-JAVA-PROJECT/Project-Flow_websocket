plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.projectflow'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'

    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // rabbitmq
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-messaging'

    // jjwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // queryDsl
    implementation 'com.querydsl:querydsl-mongodb'
    implementation 'com.querydsl:querydsl-apt'

    annotationProcessor 'javax.annotation:javax.annotation-api'
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // mongodb
//    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'

    // netty
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'

    // valitation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

test {
    useJUnitPlatform()
}

tasks.jar {
    enabled = false
}
def querydslGeneratedDir = "$buildDir/generated/querydsl" as Object

querydsl {
    library = "com.querydsl:querydsl-apt"
    springDataMongo = true
    querydslSourcesDir = querydslGeneratedDir
}

sourceSets {
    main.java.srcDir querydslGeneratedDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
